
@model ATS.Core.Domain.DTO.AttendanceViewModel
@{
    ViewBag.Title = "DailyEmployeeReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .datepicker-orient-top {
        top: 337px !important;
    }
</style>

<div class="panel" id="salaryLoad">
    <header class="panel-heading">
        <h3 class="panel-title">Daily Attendance All Employee Report</h3>
    </header>

    <div class="panel-body">

        <div class="row">

            <div class="row col-lg-6">
                <form action="@Url.Action("DailyEmployeeReportDataSource", "Reports")" method="get" id="frmdailyEmployeeReport" target="_blank">
                    @Html.HiddenFor(x => x.Name)
                    @Html.HiddenFor(x => x.Department)
                    <input type="hidden" name="startdate" id="hdstartdate" />
                    <input type="hidden" name="enddate" id="hdenddate" />
                    <input type="hidden" name="employeename" id="hdemployeename" />
                    <input type="hidden" name="departmentname" id="hddepartmentname" />
                    <input type="hidden" id="pdf" name="pdf" value="true" />
                    <div class="col-lg-6">
                        <div class="form-group form-material">
                            <label class="control-label" for="select">Employee Name</label>
                            @{

                                Html.EJ()
                                .Autocomplete("Employee").CssClass("form-control")
                                .Datasource(ds => ds.URL(Url.Action("Employees", "Home")).Adaptor("UrlAdaptor").Offline(false))
                                .AutocompleteFields(e => e.Text("Name").Key("Id"))
                                .ShowPopupButton(true).WatermarkText("Search Employee").Width("100%")
                                .ClientSideEvents(e => e.Change("EmployeeChange").FocusOut("focusOut").ActionComplete("EmployeeSelected"))
                                .Render();

                            }
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group form-material">
                            <label class="control-label" for="select">Department Name</label>
                            @{

                                Html.EJ()
                                .Autocomplete("Dept").CssClass("form-control")
                                .Datasource(ds => ds.URL(Url.Action("AllDepartments", "Home")).Adaptor("UrlAdaptor").Offline(false))
                                .AutocompleteFields(e => e.Text("Name").Key("ID"))
                                .ShowPopupButton(true).WatermarkText("Search Department").Width("100%")
                                .ClientSideEvents(e => e.Change("DeptChange").FocusOut("focusOut").ActionComplete("DeptSelected"))
                                .Render();

                            }
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="inputBasicFirstName">Start Date</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="icon wb-calendar" aria-hidden="true"></i>
                            </span>
                            <input type="text" id="startdate" class="form-control" name="ConnectionDate" data-plugin="datepicker" data-date-format="mm/dd/yyyy">
                        </div>
                    </div>

                    <div class="row form-group col-sm-6">
                        <label class="control-label" for="inputBasicFirstName">End Date</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="icon wb-calendar" aria-hidden="true"></i>
                            </span>
                            <input type="text" id="enddate" class="form-control" name="ConnectionDate" data-plugin="datepicker" data-date-format="mm/dd/yyyy">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-9 col-sm-offset-5">
                            <button type="button" onclick="fn_search()" class="btn btn-primary">Submit </button>
                            <button type="reset" onclick="fn_reset()" class="btn btn-default btn-outline">Reset</button>
                            <button type="button" id="btnpdf" class="btn btn-primary">PDF</button>
                        </div>
                    </div>
                </form>
            </div>


            <div class="col-lg-8">

            </div>

        </div>

        <div class="row">
            <div class="col-lg-12">

            </div>
        </div>
        <div class="row col-lg-12">
            <div class="row">
                <div class="col-md-2 col-md-offset-5 loaderhides" id="id_loader">
                    <img src="~/Images/ajax-loader.gif" />
                </div>
            </div>
        </div>
        <div class="row">            
        </div>

        <div class="row height-50">

        </div>


        <div class="row">
            @(Html.EJ().Grid<ATS.Core.Domain.DTO.AttendanceViewModel>("FlatGrid")

         .Datasource(ds => ds.URL(Url.Action("DailyEmployeeReportDataSource", "Reports")).Adaptor("UrlAdaptor"))
        .AllowSorting()
        .AllowPaging()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar(true).CustomToolbarItems(new List<object>() { new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#print" } });
        })
        .Columns(col =>
        {
            col.Field("EmployeeCode").HeaderText("EMP CODE").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(50).Add();
            col.Field("Name").HeaderText("NAME").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(120).Add();
            col.Field("Designation").HeaderText("DESIGNATION").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(120).Add();
            col.Field("Department").HeaderText("DEPARTMENT").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(120).Add();
            col.Field("TimeIn").HeaderText("TIME IN").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
            col.Field("TimeOut").HeaderText("TIME OUT").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
            col.Field("TotalHours").HeaderText("TOTAL").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(70).Add();
            //col.Field("Status").HeaderText("Status").IsPrimaryKey(true).TextAlign(Syncfusion.JavaScript.TextAlign.Right).Width(75).Add();
            col.Field("OT1").HeaderText("OT-1").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
            col.Field("OT2").HeaderText("OT-2").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
            col.Field("OT3").HeaderText("OT-3").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
            col.Field("OT4").HeaderText("OT-4").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();            
            col.Field("Status").HeaderText("STATUS").TextAlign(Syncfusion.JavaScript.TextAlign.Center).Width(60).Add();
        }).ClientSideEvents(x => x.ActionBegin("fn_begin").ActionComplete("complete").ToolbarClick("onToolBarClick")))
        </div>


    </div>
</div>

<script id="print" type="text/x-jsrender">
    <a class="e-print e-toolbaricons e-icon"></a>
</script>


<script>

    $(function () {
        $("#btnpdf").click(function () {
            $("#hdstartdate").val($("#startdate").val());
            $("#hdenddate").val($("#enddate").val());
            $("#hdemployeename").val($("#Employee").val());
            $("#hddepartmentname").val($("#Dept").val());   
            $("#frmdailyEmployeeReport").submit();
        });
    });

    function fn_begin(args) {

        var Name = $("#Name").val();
        var DepartmentName = $("#Department").val();     
        this.model.query.addParams("startdate", $('#startdate').val());
        this.model.query.addParams("enddate", $('#enddate').val());
        this.model.query.addParams("employeename", Name);
        this.model.query.addParams("departmentname", DepartmentName);

    }

    function complete(args) {
         var total = ej.sum(args.model.dataSource, "Amount");
        if (args.model.currentViewData.length > 0) {
            var defaultValue = args.model.currentViewData[0].Total;
            $("#total").html(defaultValue);
        }
        else {
            $("#total").html(0);
        }
    }

    function fn_search() {
        var gridObj = $("#FlatGrid").ejGrid("instance");
        gridObj.refreshContent();
    }

    function fn_reset() {
        $('#startdate').val('');
        $('#enddate').val('');
        $('#Employee').val('');
        $('#Dept').val('');
        $("#Name").val('');
        $('#Department').val('');

        var gridObj = $("#FlatGrid").ejGrid("instance");
        gridObj.refreshContent();
    }

    function EmployeeChange(args) {
        var utocompleteObj = $("#Employee").data("Employee");
        var id = args.model.value;
        $("#Name").val(id);
    };

    function DeptChange(args) {
        var utocompleteObj = $("#Dept").data("Dept");
        var id = args.model.value;
        $("#Department").val(id);
    };
</script>


<script>

    function onToolBarClick(sender) {
        $("#id_loader").removeClass("loaderhides").addClass("loadershows");
        $("#salaryLoad").addClass("loaderblur-filter");
        atsApp.print();
    }

    var atsApp;
    atsApp = (function (app) {



        app.print = function () {
            var data = {};
            data.startdate = $('#startdate').val();
            data.enddate = $('#enddate').val();
            data.employeename = $("#Name").val();
            data.departmentname = $("#Department").val();


            var url = '@Url.Action("DailyEmployeeReportDataSource", "Reports")';

            url = url + "?startdate=" + $('#startdate').val() + "&enddate=" + $('#enddate').val() + "&employeename=" + $("#Name").val() + "&departmentname=" + $("#Department").val();
            url = url + "&skip=0&take=10&print=1";
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                success: function (data) {
                    $("#id_loader").removeClass("loadershows").addClass("loaderhides");
                    $("#salaryLoad").removeClass("loaderblur-filter");

                    var myWindow = window.open('', '', 'width=800,height=800,top=200,left=200,toolbars=no,scrollbars=no,status=no,resizable=no');
                    myWindow.document.write(data);
                    myWindow.document.close(); //missing code


                    myWindow.focus();

                    $(myWindow.document).ready(function () {

                        //ej.widget.init($("#FlatGrid"));

                        //$("#FlatGrid").ejGrid("print");

                        setTimeout(function () {
                            myWindow.print();
                            myWindow.close();
                        }, 1000);

                    });

                },
                error: function () {
                    alert('Error');
                }
            });
        };

        return app;
    })(window.atsApp || {})

</script>




